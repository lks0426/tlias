<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wrx.mapper.EmpMapper">
    <update id="updateById">
        UPDATE emp
        <set>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null and image != ''">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        WHERE id = #{id}
    </update>
    <!--根据条件搜索员工-->
    <select id="list" resultType="com.wrx.pojo.Emp">
        SELECT e.*, d.name FROM emp e LEFT JOIN dept d ON e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                e.name LIKE CONCAT('%',#{name},'%')
            </if>
            <if test="gender != null">
                AND e.gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                AND e.entry_date BETWEEN #{begin} AND #{end}
            </if>
        </where>
        ORDER BY e.update_time DESC
    </select>
    <!--根据id修改员工信息，查询回显-->
    <!--一个员工可能对应多条工作经历，自动封装可能报错查询返回多条记录，因此需要手动封装-->
    <resultMap id="empResultMap" type="com.wrx.pojo.Emp">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="job" property="job"/>
        <result column="salary" property="salary"/>
        <result column="image" property="image"/>
        <result column="entry_date" property="entryDate"/>
        <result column="dept_id" property="deptId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <!--将多条工作经历封装到集合中
            property指定封装的集合名称，为员工信息中声明的exprList工作经历属性
            ofType指定按找哪个实体进行封装
        -->
        <collection property="exprList" ofType="com.wrx.pojo.EmpExpr">
            <id property="id" column="ee_id"/>
            <result property="empId" column="ee_empId"/>
            <result property="begin" column="ee_begin"/>
            <result property="end" column="ee_end"/>
            <result property="company" column="ee_company"/>
            <result property="job" column="ee_job"/>
        </collection>
    </resultMap>
    <select id="getById" resultMap="empResultMap">
        SELECT e.*,
               ee.id ee_id,
               ee.emp_id ee_empId,
               ee.`begin` ee_begin,
               ee.`end` ee_end,
               ee.company ee_company,
               ee.job ee_job
        FROM emp e
                 LEFT JOIN emp_expr ee
                           ON e.id = ee.emp_id
        where e.id = #{id}
    </select>
    <!--按照职位统计员工数量-->
    <select id="countEmpJobData" resultType="java.util.Map">
        SELECT
            CASE WHEN job = 1 THEN '班主任'
                 WHEN job = 2 THEN '讲师'
                 WHEN job = 3 THEN '学工主管'
                 WHEN job = 4 THEN '教研主管'
                 WHEN job = 5 THEN '咨询师'
                 ELSE '其他'
                END pos,
            count(1) num
        FROM emp e
        group by job
        order by num
    </select>
    <!--员工按性别统计数量-->
    <select id="countEmpGenderData" resultType="java.util.Map">
        SELECT
            IF(gender = 1, '男性员工','女性员工') name,
            count(1) value
        FROM emp e
        group by gender
    </select>
    <!--根据员工id批量删除员工基本信息-->
    <delete id="deleteByIds">
        delete from emp where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
</mapper>